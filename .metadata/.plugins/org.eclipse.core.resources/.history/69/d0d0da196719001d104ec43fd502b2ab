package com.mysite.sbb.question;

import java.util.List;

import javax.validation.Valid;

import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import lombok.RequiredArgsConstructor;

@RequestMapping("/question")
@RequiredArgsConstructor
@Controller
public class QuestionController {
	
	private final QuestionService questionService;
	

    @RequestMapping("/list")    
    public String list(Model model) {
    	List<Question> qList = questionService.getList();
    	model.addAttribute("questionList",qList);   	
        return "question_list";        
    }
    
    
    @RequestMapping("/detail/{id}")    
    public String detail(@PathVariable("id") Integer id, Model model) {
        Question q = questionService.getQuestion(id);
        model.addAttribute("question",q);   	
        return "question_detail";         
    }
    
    @PostMapping("/create")
    public String questionCreate(@Valid QuestionForm questionForm, BindingResult bindingResult)
    {
    	if (bindingResult.hasErrors()) {
    		return "question_form";
    	}
       this.questionService.create(questionForm.getSubject(), questionForm.getContent());
       return"redirect:/question/list";
    }
    
    @PostMapping("/create")
    public String questionCreate(@RequestParam String subject, @RequestParam String content) {
    	this.questionService.create(subject, content);// TODO 질문을 저장한다.
        return "redirect:/question/list"; // 질문 저장후 질문목록으로 이동
    }
    
}