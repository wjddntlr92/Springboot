package com.mysite.sbb.item;

import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.security.Principal;
import java.util.List;

import javax.validation.Valid;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.mysite.sbb.itemImg.ItemImgService;
import com.mysite.sbb.user.SiteUser;
import com.mysite.sbb.user.UserService;

import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@RequestMapping("/item")
@Controller
public class ItemController {
	
	private final UserService userService;
	private final ItemService itemService;
	private final ItemImgService itemImgService;
	
	
	@GetMapping("/list")
	public String itemList() {
		
		return "/item/list";
	}
	
	@GetMapping("/upload")
	private String uploadItem(ItemUploadForm itemUploadForm) {
		return "/item/upload";
	}
	
	@PostMapping("/upload")
	private String uploadItem(@Valid ItemUploadForm itemUploadForm, BindingResult bindingResult, @RequestParam("imgs") List<MultipartFile> imgs, Principal principal) {
		
		if(bindingResult.hasErrors()) {
			return "/item/upload";
		}
		
		if(imgs.size()<1) {
			
			return "/item/upload";
		}
		
		
		
		SiteUser siteUser = this.userService.getUser(principal.getName());
		this.itemService.createItem(itemUploadForm.getItemName(),itemUploadForm.getItemDetail(),siteUser, itemUploadForm.getPrice(),itemUploadForm.getAmount());
		
		
		return "redirect:/item/list";
	}
	
//	@PostMapping("/upload")
//    public ResponseEntity<?> fileUpload(@RequestParam("file") MultipartFile file) throws IOException {
//        String fileName = file.getOriginalFilename();
//        Path dest = Paths.get("/");
//
//        try {
//            file.transferTo(dest);
//        }catch (Exception e){
//            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
//        }
//        return ResponseEntity.ok("file upload ok~!");
//    }
//

}
